name: Wheels

on:
  workflow_dispatch:
    inputs:
      overrideVersion:
        description: Manually force a version
  pull_request:
    branches:
      - master
      - main
  push:
    branches:
      - master
      - main
  release:
    types:
      - published

concurrency:
  group: wheels-${{ github.head_ref }}
  cancel-in-progress: true

env:
  # See https://github.com/pypa/setuptools_scm/pull/685
  # SETUPTOOLS_SCM_PRETEND_VERSION: ${{ github.event.inputs.overrideVersion }}
  CIBW_ENVIRONMENT_PASS: SETUPTOOLS_SCM_PRETEND_VERSION
  CIBW_ENVIRONMENT: "PIP_PREFER_BINARY=1"

jobs:
  build_sdist:
    name: Build SDist
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
        submodules: true

    - name: Set version if needed
      if: github.event.inputs.overrideVersion
      run: echo "SETUPTOOLS_SCM_PRETEND_VERSION=${{ github.event.inputs.overrideVersion }}" >> $GITHUB_ENV

    - name: Build SDist
      run: pipx run build --sdist

    - name: Check metadata
      run: pipx run twine check --strict dist/*

    - uses: actions/upload-artifact@v3
      with:
        path: dist/*.tar.gz


  build_arch_wheels:
    name: ${{ matrix.python }} on ${{ matrix.arch }}
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        python: [36, 37, 38, 39, 310, 311]
        arch: [aarch64]
    steps:

    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
        submodules: true

    - name: Set version if needed
      if: github.event.inputs.overrideVersion
      shell: bash
      run: echo "SETUPTOOLS_SCM_PRETEND_VERSION=${{ github.event.inputs.overrideVersion }}" >> $GITHUB_ENV

    - uses: docker/setup-qemu-action@v2.0.0
      with:
        platforms: all

    - uses: pypa/cibuildwheel@v2.10.1
      env:
        CIBW_BUILD: cp${{ matrix.python }}-manylinux_*
        CIBW_ARCHS: ${{ matrix.arch }}

    - name: Verify clean directory
      run: git diff --exit-code
      shell: bash

    - name: Upload wheels
      uses: actions/upload-artifact@v3
      with:
        path: wheelhouse/*.whl


  build_wheels:
    name: ${{ matrix.type }} ${{ matrix.arch }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-2019, macos-latest, ubuntu-latest]
        arch: [auto64]
        build: ["?p3{?,1?}-*"]

        include:
          - os: ubuntu-latest
            arch: auto32
            build: "?p3{?,1?}-*"

          - os: ubuntu-latest
            type: ManyLinux1
            arch: auto
            build: "cp{36,37,38}-manylinux*"
            CIBW_MANYLINUX_X86_64_IMAGE: skhep/manylinuxgcc-x86_64
            CIBW_MANYLINUX_I686_IMAGE: skhep/manylinuxgcc-i686

          - os: macos-latest
            arch: universal2
            build: "?p3{?,1?}-*"

          - os: windows-2019
            arch: auto32
            build: "?p3{?,1?}-*"

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
        submodules: true

    - name: Set version if needed
      if: github.event.inputs.overrideVersion
      shell: bash
      run: echo "SETUPTOOLS_SCM_PRETEND_VERSION=${{ github.event.inputs.overrideVersion }}" >> $GITHUB_ENV

    - uses: pypa/cibuildwheel@v2.10.1
      env:
        CIBW_BUILD: ${{ matrix.build }}
        CIBW_MANYLINUX_I686_IMAGE: ${{ matrix.CIBW_MANYLINUX_I686_IMAGE }}
        CIBW_MANYLINUX_X86_64_IMAGE: ${{ matrix.CIBW_MANYLINUX_X86_64_IMAGE }}
        CIBW_ARCHS: ${{ matrix.arch }}

    - name: Verify clean directory
      run: git diff --exit-code
      shell: bash

    - name: Upload wheels
      uses: actions/upload-artifact@v3
      with:
        path: wheelhouse/*.whl


  upload_all:
    name: Upload if release
    needs: [build_wheels, build_arch_wheels, build_sdist]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/download-artifact@v3
      with:
        name: artifact
        path: dist

    - name: List all files
      run: ls -lh dist

    - uses: pypa/gh-action-pypi-publish@v1.5.1
      if: github.event_name == 'release' && github.event.action == 'published'
      with:
        password: ${{ secrets.pypi_password }}
