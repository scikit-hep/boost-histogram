name: Tests

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
    - master
    - develop

env:
  FORCE_COLOR: 3

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  clang-tidy:
    name: Clang-Tidy
    runs-on: ubuntu-latest
    container: silkeh/clang:10

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
        submodules: true

    - name: Install requirements
      run: apt-get update && apt-get install -y python3-dev python3-pip

    - name: Install extra requirements
      run: python3 -m pip install setuptools_scm

    - name: Configure
      run: cmake -S . -B build -DCMAKE_CXX_CLANG_TIDY="$(which clang-tidy);--warnings-as-errors=*"

    - name: Build
      run: cmake --build build -j 2

  pylint:
    runs-on: ubuntu-latest
    name: PyLint

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
        submodules: true

    - name: Run PyLint
      run: |
        echo "::add-matcher::$GITHUB_WORKSPACE/.github/matchers/pylint.json"
        pipx run nox -s pylint


  cmake:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.6", "3.9", "3.11-dev", "pypy3.8"]
        include:
        - python-version: "3.8"
          cmake-extras: "-DCMAKE_CXX_STANDARD=17"

    name: CMake Python ${{ matrix.python-version }}

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
        submodules: true

    - uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install python tools
      run: python -m pip install -r dev-requirements.txt pytest-github-actions-annotate-failures

    - name: Configure
      run: cmake -S . -B build -DCMAKE_BUILD_TYPE=Debug -DBOOST_HISTOGRAM_ERRORS=ON ${{ matrix.cmake-extras }}

    - name: Build
      run: cmake --build build -j 2

    - name: Test
      working-directory: ./build
      run: python -m pytest -ra

  build_wheels:
    name: Wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-2019, macos-latest]

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: true
        fetch-depth: 0

    - uses: pypa/cibuildwheel@v2.10.1
      env:
        CIBW_BUILD: cp38-win_amd64 cp310-manylinux_i686 cp37-macosx_x86_64
        CIBW_BUILD_VERBOSITY: 1

    - uses: actions/upload-artifact@v3
      with:
        path: wheelhouse/*

    - name: Check wheels
      run: pipx run twine check wheelhouse/*
      shell: bash
